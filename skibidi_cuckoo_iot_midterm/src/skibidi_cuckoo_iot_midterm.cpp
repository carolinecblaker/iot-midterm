/* 
 * Project: Skibidi Cuckoo Clock IOT Midterm
 * Author: Caroline Blaker
 * Date: 2024-10-29
 * Completely unserious novelty room controller clock that celebrates the hour.
 * https://docs.particle.io/firmware/best-practices/firmware-template/
 */


#include "Particle.h"
#include "Button.h"

#include "IoTClassroom_CNM.h"
#include "Colors.h"
// Add Libraries
// LIghts
#include "Neopixel.h"
// Mp3 player
#include "DFRobotDFPlayerMini.h"
// OLED
#include "Adafruit_GFX.h"
#include "Adafruit_SSD1306.h"

//#include "logo_bitmap.h"

static const unsigned char aquarianBitmap[] = 
	// '150, 54x60px
  { 
		0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00, 
	0x00, 0x01, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x03, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 
	0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 
	0x3f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x7f, 0xff, 
	0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfc, 
	0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 
	0x01, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff, 
	0xff, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
	0xfe, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x38, 0x3f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x00, 0x00, 0x07, 0x81, 0xff, 0xff, 0xff, 
	0x00, 0x00, 0x3f, 0xe0, 0xff, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xf0, 0xff, 0xff, 0xff, 0x80, 0x00, 
	0xff, 0xf8, 0x7f, 0xff, 0xff, 0x80, 0x00, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfc, 
	0x3f, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfe, 0x3f, 0xff, 
	0xff, 0x80, 0x01, 0xff, 0xfe, 0x3f, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x10, 0x00, 0x00, 0x00, 
	0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0x00, 
	0x00, 0x3f, 0xff, 0xff, 0xc0, 0x3e, 0x00, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x80, 0x07, 0xc0, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 
	0x00, 0x00, 0x00, 0x00
};

// Pin number straight from sample code. Change at will
const int MYWEMO = 1;
const int BUTTONPIN = D2;
const int BUTTON2PIN = D7;
const int PIXELCOUNT = 16;
bool onOff = 0;
bool playNow =0;
int now;
int timeCode;
int timeHour;
int timeMinute;
int timeSecond;
int timeOldMinute;
int begin = 55;
byte status, address;
int nDevices;const 
int OLED_RESET =-1;

// Use our WiFi
//SYSTEM_MODE(SEMI_AUTOMATIC);
SYSTEM_MODE(MANUAL);

Button lightButton(BUTTONPIN);
Button powerButton(BUTTON2PIN);
Adafruit_NeoPixel pixel(PIXELCOUNT, SPI, WS2812B);
Adafruit_SSD1306 displayL(OLED_RESET);
Adafruit_SSD1306 displayR(OLED_RESET);
//DFRobotDFPlayerMini myDFPlayer; <-- red zone
Servo myServo;

void displayTheTime(int timeHour, int timeMinute);
void playShow();
void pixelFill(int start, int end, int color);

// Let's get going
void setup() {
  Serial.begin(9600);
  waitFor(Serial.isConnected,10000);
  Serial1.begin(9600);
  delay(1000);

  displayL.begin(SSD1306_SWITCHCAPVCC, 0x3d);
  displayR.begin(SSD1306_SWITCHCAPVCC, 0x3c);
  displayL.display();
  displayR.display(); // turn on
  

  pixel.begin();
  pixel.setBrightness(37);
  pixel.show(); //initialize all off

  //myDFPlayer.volume(5);  //Set volume value. From 0 to 30
  //myDFPlayer.loop(1);  //Play the first mp3 
  
  myServo.attach(A5);

  WiFi.on();
  WiFi.clearCredentials();
  WiFi.setCredentials("IoTNetwork");
  WiFi.connect();
  while (WiFi.connecting()){
  //  Serial.print(".");
  }
  displayL.setTextColor(WHITE);
  displayR.setTextColor(WHITE);
  // Made by Aquarian! (Extra credit bitmap)
  displayR.clearDisplay();   // release previous things
  displayL.clearDisplay();
  displayL.display();
  displayR.display(); // display the clear

  displayL.drawBitmap(30, 2, aquarianBitmap, 54, 60, WHITE);
  displayL.display(); // LOtsGOOOOOO

  displayR.clearDisplay();
  displayR.setTextSize(2); 
  displayR.setTextColor(WHITE);
  displayR.setCursor(0,10);  
  displayR.print("Aquarian");
  displayR.setCursor(0,30);  
  displayR.print("Web Studio");
  
  displayR.display(); 
  
  delay(5000);
  displayL.clearDisplay();
  displayR.clearDisplay();
  Time.zone(-6);
  Particle.syncTime();
  
  waitFor(Serial.isConnected,15000);
  //Serial.print("\nSerial begin\n");
  //TODO: get the time
  timeCode = millis();
  timeHour = Time.hour();
  timeMinute = Time.minute();
  displayTheTime(timeHour, timeMinute);
}

void loop() { 
  now= millis();
  timeHour = Time.hour();
  timeMinute = Time.minute();
  timeSecond = (now /1000) %60;
 // Serial.printf("now: %i\n",timeSecond); // Checkign that this is actually time seconds
 // Serial.print("Loop\n");
  if (powerButton.isClicked()){
    onOff= !onOff;
    //Serial.print("Power button clicked\n");
    
  }
  if (lightButton.isClicked()){
    //Serial.print("Light button clicked\n");
    playNow=1;
  }
  if(timeMinute != timeOldMinute){
    displayTheTime(timeHour,timeMinute);
  }
  if (onOff && timeMinute ==59 && timeSecond  ==54){
    delay(1000);
    playNow=1;
  }
  if (playNow){
    playShow();
  }
  if (onOff){
    pixelFill(0,1,yellow);
  } else {
    pixel.clear();
    pixel.show();
  }
}

void displayTheTime(int timeHour, int timeMinute){
  
  displayR.clearDisplay();   // release previous things
  displayL.clearDisplay();
  displayL.display();
  displayR.display(); // display the clear
  displayR.setTextSize(6); 
  
  displayR.setCursor(0,10); 
  displayR.printf(":%02d",timeMinute); 

  displayR.display(); 

  displayL.clearDisplay();
  displayL.setTextSize(6); 
  displayL.setCursor(20,10);
  displayL.printf("%i",timeHour);
  timeOldMinute=timeMinute;
  displayL.display();
  
}
void  playShow(){
  Serial.print("\nWelcome to the shit show\n");
  playNow=0;
  // open toilet
  // myServo.write(60);
  wemoWrite(MYWEMO,1);
  // Sequence of cool shit (come on, it's toilet themed.)
  pixelFill(0,15,magenta);
  
  delay(5000); // just so it doesn't go away to quickly
  wemoWrite(MYWEMO,0);
  //close toilet
  // myServo.write(0);
  pixel.clear(); // not working
  pixel.show();
  if (onOff){
    pixelFill(0,1,yellow);
  }
  

}
void pixelFill(int start, int end, int color) {
    int _i;
    for (_i = start; _i <= end; _i++ ){
        pixel.setPixelColor(_i, color);
    }
    pixel.show();
  }
 